[background-preinit][INFO ] 15:08:02 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:08:03 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9b198325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:03 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:08:04 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:08:04 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:08:04 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
[main][INFO ] 15:08:04 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7eff8028] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e88df0f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9b198325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:08:05 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:08:05 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 2207 ms
[main][WARN ] 15:08:06 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:08:06 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:08:06 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:08:06 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:08:06 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:08:06 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:08:06 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:08:06 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:08:06 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][INFO ] 15:08:08 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> do mqclient producer post_init...
[main][WARN ] 15:08:09 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:08:10 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'repayController': Unsatisfied dependency expressed through field 'funPayFacade'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sup.common.service.PayCenterService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
[main][INFO ] 15:08:10 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[main][INFO ] 15:08:10 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[main][INFO ] 15:08:10 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[main][INFO ] 15:08:10 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[main][INFO ] 15:08:10 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[main][INFO ] 15:08:10 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[main][INFO ] 15:08:10 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 15:08:10 method:org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822)> Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'repayController': Unsatisfied dependency expressed through field 'funPayFacade'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sup.common.service.PayCenterService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)
	at com.sup.backend.BackendApplication.main(BackendApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sup.common.service.PayCenterService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1674)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 24 more
Caused by: java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:241)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:267)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:247)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	... 35 more
[Thread-5][INFO ] 15:15:23 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[Thread-8][INFO ] 15:15:23 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[background-preinit][INFO ] 15:15:27 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:15:28 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed33cade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:28 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:15:29 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:15:29 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:15:29 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
[main][INFO ] 15:15:29 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d119c7e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3aa838b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed33cade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:15:29 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:15:30 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1876 ms
[main][WARN ] 15:15:30 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:15:30 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:15:30 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:15:30 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:15:30 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:15:30 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:15:30 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:15:30 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:15:31 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][INFO ] 15:15:33 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> do mqclient producer post_init...
[main][WARN ] 15:15:34 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:15:34 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'repayController': Unsatisfied dependency expressed through field 'funPayFacade'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sup.common.service.PayCenterService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
[main][INFO ] 15:15:34 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[main][INFO ] 15:15:34 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[main][INFO ] 15:15:34 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[main][INFO ] 15:15:34 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[main][INFO ] 15:15:34 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[main][INFO ] 15:15:34 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[main][INFO ] 15:15:34 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 15:15:34 method:org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822)> Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'repayController': Unsatisfied dependency expressed through field 'funPayFacade'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sup.common.service.PayCenterService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)
	at com.sup.backend.BackendApplication.main(BackendApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.sup.common.service.PayCenterService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1674)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 24 more
Caused by: java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-netflix-ribbon?
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:241)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:267)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:247)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	... 35 more
[Thread-8][INFO ] 15:16:27 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 15:16:27 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[background-preinit][INFO ] 15:16:55 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:16:55 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7231472f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:56 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:16:57 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:16:57 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:16:57 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 42ms. Found 0 repository interfaces.
[main][INFO ] 15:16:57 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$56174432] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bfa5b503] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7231472f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:16:57 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:16:58 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1957 ms
[main][WARN ] 15:16:58 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:16:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:16:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:16:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:16:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:16:58 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:16:58 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:16:58 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:16:58 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][INFO ] 15:17:01 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> do mqclient producer post_init...
[main][WARN ] 15:17:02 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:17:02 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:17:02 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:17:02 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:17:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:17:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:17:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:17:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:17:03 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:17:03 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:17:03 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:17:03 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:17:03 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:17:03 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:17:03 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:17:03 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3e856100
[main][INFO ] 15:17:03 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:17:03 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:17:03 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:17:03 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 8.943 seconds (JVM running for 9.564)
[http-nio-10081-exec-1][INFO ] 15:17:39 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:17:39 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 11 ms
[Thread-8][INFO ] 15:18:18 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 15:18:18 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[Thread-11][INFO ] 15:18:18 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:18:18 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 15:18:18 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 15:18:18 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:18:18 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 15:18:18 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 15:18:18 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 15:18:18 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 15:18:18 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 15:18:18 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 15:18:18 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 15:18:18 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 15:19:06 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:19:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f7fda849] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:07 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:19:08 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:19:08 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:19:08 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
[main][INFO ] 15:19:08 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbe3a54c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4572161d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:08 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f7fda849] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:19:09 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:19:09 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1846 ms
[main][WARN ] 15:19:09 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:19:09 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:19:09 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:19:09 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:19:09 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:19:09 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:19:09 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:19:09 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:19:10 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][INFO ] 15:19:11 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> do mqclient producer post_init...
[main][WARN ] 15:19:12 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:19:12 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:19:12 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:19:12 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:19:12 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:19:12 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:19:12 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:19:12 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:19:13 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:19:13 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:19:13 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:19:13 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:19:13 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:19:13 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:19:13 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:19:13 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@570a62a5
[main][INFO ] 15:19:13 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:19:13 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:19:13 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:19:13 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 7.648 seconds (JVM running for 8.215)
[http-nio-10081-exec-1][INFO ] 15:19:24 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:19:24 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 8 ms
[Thread-8][INFO ] 15:22:32 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 15:22:32 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[Thread-11][INFO ] 15:22:32 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:22:32 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 15:22:32 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 15:22:32 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:22:32 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 15:22:32 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 15:22:32 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 15:22:32 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 15:22:32 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 15:22:32 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 15:22:32 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 15:22:32 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 15:22:37 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:22:38 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$43254808] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:39 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:22:39 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:22:39 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:22:39 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
[main][INFO ] 15:22:40 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$270b450b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9099b5dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$43254808] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:22:40 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:22:41 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 2093 ms
[main][WARN ] 15:22:41 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:22:41 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:22:41 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:22:41 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:22:41 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:22:41 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:22:41 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:22:41 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:22:42 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][INFO ] 15:22:44 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> do mqclient producer post_init...
[main][WARN ] 15:22:45 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:22:45 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:22:45 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:22:45 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:22:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:22:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:22:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:22:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:22:46 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:22:46 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:22:46 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:22:46 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:22:46 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:22:46 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:22:46 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:22:46 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1511d157
[main][INFO ] 15:22:46 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:22:46 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:22:46 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:22:46 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 8.857 seconds (JVM running for 9.432)
[http-nio-10081-exec-1][INFO ] 15:22:52 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:22:52 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 6 ms
[Thread-8][INFO ] 15:24:08 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 15:24:08 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:24:08 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 15:24:08 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 15:24:08 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:24:08 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-5][INFO ] 15:24:08 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[Thread-11][INFO ] 15:24:08 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 15:24:08 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 15:24:08 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 15:24:08 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 15:24:08 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 15:24:08 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 15:24:08 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 15:24:11 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:24:12 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4d8d822] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:12 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:24:13 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:24:13 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:24:13 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
[main][INFO ] 15:24:13 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8bed525] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$524d45f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4d8d822] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:24:14 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:24:14 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1671 ms
[main][WARN ] 15:24:14 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:24:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:24:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:24:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:24:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:24:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:24:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:24:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:24:15 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][INFO ] 15:24:17 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> do mqclient producer post_init...
[main][WARN ] 15:24:18 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:24:18 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:24:18 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:24:18 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:24:18 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:24:18 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:24:18 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:24:18 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:24:19 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:24:19 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:24:19 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:24:19 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:24:19 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:24:19 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:24:19 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:24:19 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1b560eb0
[main][INFO ] 15:24:19 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:24:19 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:24:19 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:24:19 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 8.138 seconds (JVM running for 8.624)
[http-nio-10081-exec-1][INFO ] 15:24:21 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:24:21 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 8 ms
[Thread-8][INFO ] 15:48:41 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 15:48:41 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[Thread-11][INFO ] 15:48:41 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:48:41 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 15:48:41 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 15:48:41 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:48:41 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 15:48:41 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 15:48:41 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 15:48:41 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 15:48:41 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 15:48:41 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 15:48:41 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 15:48:41 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 15:49:11 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:49:12 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3569610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:12 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:49:13 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:49:13 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:49:13 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
[main][INFO ] 15:49:13 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$194f5e0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$82ddcedf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3569610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:49:14 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:49:14 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1736 ms
[main][WARN ] 15:49:14 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:49:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:49:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:49:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:49:14 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:49:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:49:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:49:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:49:15 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:83)> init_rocket_mq_consumer...
[main][INFO ] 15:49:15 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:78)> final_topic_info:{"dummy":["dummy"]}
[main][INFO ] 15:49:15 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer.....
[main][WARN ] 15:49:16 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:49:16 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:49:16 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:49:16 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:49:16 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:49:16 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:49:16 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:49:16 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:49:17 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:49:17 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:49:17 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:49:17 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:49:17 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:49:17 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:49:17 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:49:17 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@691567ea
[main][INFO ] 15:49:17 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:49:17 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:49:17 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:49:17 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.05 seconds (JVM running for 6.55)
[http-nio-10081-exec-1][INFO ] 15:51:25 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:51:25 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 9 ms
[Thread-8][INFO ] 15:53:35 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 15:53:35 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-5][INFO ] 15:53:35 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:92)> shutdown the mq consumer...
[Thread-11][INFO ] 15:53:35 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 15:53:35 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 15:53:35 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:53:35 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 15:53:35 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 15:53:36 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 15:53:36 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 15:53:36 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 15:53:36 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 15:53:36 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 15:53:36 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 15:53:45 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:53:45 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4f0c84a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:46 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:53:46 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:53:46 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:53:46 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 35ms. Found 0 repository interfaces.
[main][INFO ] 15:53:47 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32f281a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9c80f277] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4f0c84a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:53:47 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:53:47 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1689 ms
[main][WARN ] 15:53:48 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:53:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:53:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:53:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:53:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:53:48 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:53:48 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:53:48 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:53:48 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:83)> init_rocket_mq_consumer...
[main][INFO ] 15:53:48 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:78)> final_topic_info:{"dummy":["dummy"]}
[main][INFO ] 15:53:48 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer.....
[main][WARN ] 15:53:49 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:53:49 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:53:49 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:53:49 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:53:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:53:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:53:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:53:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:53:50 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:53:50 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:53:50 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:53:50 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:53:50 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:53:50 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:53:50 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:53:50 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@6c951ada
[main][INFO ] 15:53:50 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:53:50 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:53:50 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:53:50 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 5.657 seconds (JVM running for 6.125)
[http-nio-10081-exec-1][INFO ] 15:53:57 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:53:57 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 9 ms
[Thread-8][INFO ] 15:54:42 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 15:54:42 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:92)> shutdown the mq consumer...
[Thread-11][INFO ] 15:54:42 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:54:42 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 15:54:42 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 15:54:42 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 15:54:42 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 15:54:42 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 15:54:43 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 15:54:43 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 15:54:43 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 15:54:43 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 15:54:43 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 15:54:43 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 15:54:47 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 15:54:47 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad1826e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:48 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 15:54:48 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 15:54:48 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 15:54:48 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[main][INFO ] 15:54:49 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$90fe23e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fa8c94b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad1826e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 15:54:49 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 15:54:49 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1700 ms
[main][WARN ] 15:54:50 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 15:54:50 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 15:54:50 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 15:54:50 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 15:54:50 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 15:54:50 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 15:54:50 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 15:54:50 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 15:54:50 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:83)> init_rocket_mq_consumer...
[main][INFO ] 15:54:50 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:78)> final_topic_info:{"dummy":["dummy"]}
[main][INFO ] 15:54:50 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer.....
[main][WARN ] 15:54:51 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 15:54:51 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 15:54:51 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 15:54:51 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 15:54:51 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:54:51 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 15:54:51 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 15:54:51 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 15:54:52 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 15:54:52 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 15:54:52 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 15:54:52 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 15:54:52 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 15:54:52 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 15:54:52 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 15:54:52 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7c453c34
[main][INFO ] 15:54:52 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 15:54:52 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 15:54:52 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 15:54:52 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 5.815 seconds (JVM running for 6.276)
[http-nio-10081-exec-1][INFO ] 15:54:58 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 15:54:58 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 9 ms
[Thread-5][INFO ] 16:01:34 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:93)> shutdown the mq consumer...
[Thread-8][INFO ] 16:01:34 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 16:01:34 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:01:34 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:01:34 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:01:34 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:01:34 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 16:01:34 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:01:35 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:01:35 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:01:35 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:01:35 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:01:35 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:01:35 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 16:01:40 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:01:41 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1da04ff3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:41 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:01:42 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:01:42 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:01:42 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
[main][INFO ] 16:01:42 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1864cf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6b14bdc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:42 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1da04ff3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:01:43 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:01:43 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 2108 ms
[main][WARN ] 16:01:43 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:01:43 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:01:44 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:01:44 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:01:44 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:01:44 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:01:44 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:01:44 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:01:44 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:83)> init_rocket_mq_consumer: ${rocket.consumer.endpoint@user_state_group
[main][INFO ] 16:01:44 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:78)> final_topic_info:{"dummy":["dummy"]}
[main][INFO ] 16:01:44 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: ${rocket.producer.endpoint@user_state_group
[main][WARN ] 16:01:45 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 16:01:45 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 16:01:45 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 16:01:45 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 16:01:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:01:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 16:01:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:01:45 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 16:01:46 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 16:01:46 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 16:01:46 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 16:01:46 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 16:01:46 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 16:01:46 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 16:01:46 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 16:01:46 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5a592c70
[main][INFO ] 16:01:46 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 16:01:46 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 16:01:46 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 16:01:46 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.602 seconds (JVM running for 7.116)
[Thread-8][INFO ] 16:02:14 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 16:02:14 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:02:14 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:02:14 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:02:14 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:02:14 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-5][INFO ] 16:02:14 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:93)> shutdown the mq consumer...
[Thread-11][INFO ] 16:02:14 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:02:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:02:14 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:02:14 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:02:14 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:02:14 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:02:14 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 16:02:21 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:02:22 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$20aa8f79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:22 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:02:23 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:02:23 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:02:23 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
[main][INFO ] 16:02:23 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4908c7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6e1efd4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$20aa8f79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:02:24 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:02:24 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1765 ms
[main][WARN ] 16:02:24 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:02:24 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:02:24 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:02:24 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:02:24 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:02:24 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:02:24 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:02:24 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:02:25 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:83)> init_rocket_mq_consumer: localhost:9976@user_state_group
[main][INFO ] 16:02:25 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:78)> final_topic_info:{"dummy":["dummy"]}
[main][INFO ] 16:02:25 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: localhost:9976@user_state_group
[main][WARN ] 16:02:25 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 16:02:26 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 16:02:26 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 16:02:26 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 16:02:26 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:02:26 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 16:02:26 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:02:26 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 16:02:27 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 16:02:27 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 16:02:27 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 16:02:27 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 16:02:27 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 16:02:27 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 16:02:27 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 16:02:27 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@72c9ebfa
[main][INFO ] 16:02:27 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 16:02:27 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 16:02:27 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 16:02:27 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.073 seconds (JVM running for 6.589)
[http-nio-10081-exec-1][INFO ] 16:04:38 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 16:04:38 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 11 ms
[Thread-11][INFO ] 16:06:24 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-5][INFO ] 16:06:24 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:93)> shutdown the mq consumer...
[Thread-8][INFO ] 16:06:24 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 16:06:24 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:06:24 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:06:24 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:06:24 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 16:06:24 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 16:07:04 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:07:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$854d7304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:06 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:07:06 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:07:06 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:07:06 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
[main][INFO ] 16:07:07 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69337007] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d2c1e0d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$854d7304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:07:07 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:07:07 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1818 ms
[main][WARN ] 16:07:08 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:07:08 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:07:08 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:07:08 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:07:08 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:07:08 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:07:08 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:07:08 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:07:08 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:83)> init_rocket_mq_consumer: localhost:9976@user_state_group
[main][INFO ] 16:07:08 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:78)> final_topic_info:{"user_business_state":["issue_verify_code"]}
[main][INFO ] 16:07:09 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: localhost:9976@user_state_group
[main][WARN ] 16:07:09 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 16:07:10 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 16:07:10 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 16:07:10 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 16:07:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:07:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 16:07:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:07:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 16:07:11 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 16:07:11 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 16:07:11 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 16:07:11 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 16:07:11 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 16:07:11 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 16:07:11 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 16:07:11 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@32ab408e
[main][INFO ] 16:07:11 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 16:07:11 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 16:07:11 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 16:07:11 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.757 seconds (JVM running for 7.245)
[http-nio-10081-exec-1][INFO ] 16:07:50 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 16:07:50 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 8 ms
[Thread-8][INFO ] 16:18:39 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 16:18:39 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:93)> shutdown the mq consumer...
[Thread-11][INFO ] 16:18:39 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:18:39 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:18:39 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:18:39 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:18:39 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 16:18:39 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:18:40 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:18:40 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:18:40 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:18:40 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:18:40 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:18:40 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 16:18:51 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:18:52 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b6f4a445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:52 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:18:53 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:18:53 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:18:53 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[main][INFO ] 16:18:53 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9adaa148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4691219] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:53 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b6f4a445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:18:54 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:18:54 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1751 ms
[main][WARN ] 16:18:54 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:18:54 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:18:55 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:18:55 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:18:55 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:18:55 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:18:55 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:18:55 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:18:55 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:84)> init_rocket_mq_consumer: localhost:9976@user_state_group
[main][INFO ] 16:18:55 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:79)> final_topic_info:{"user_business_state":["issue_verify_code"]}
[main][INFO ] 16:18:55 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: localhost:9976@user_state_group
[main][WARN ] 16:18:56 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 16:18:56 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 16:18:56 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 16:18:56 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 16:18:56 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:18:56 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 16:18:56 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:18:56 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 16:18:57 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 16:18:57 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 16:18:57 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 16:18:57 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 16:18:57 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 16:18:57 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 16:18:57 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 16:18:57 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5c448ef
[main][INFO ] 16:18:58 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 16:18:58 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 16:18:58 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 16:18:58 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.709 seconds (JVM running for 7.182)
[http-nio-10081-exec-1][INFO ] 16:19:04 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 16:19:04 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 8 ms
[ConsumeMessageThread_1][INFO ] 16:19:04 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:128)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:19:04","ext":"{\"msg\":\"code:1234\"}","mobile":"123457777889","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:19:15 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:128)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:19:15","ext":"{\"msg\":\"code:1234\"}","mobile":"ok","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:19:20 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:128)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:19:20","ext":"{\"msg\":\"code:1234\"}","mobile":"ok1","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:22:30 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:128)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:22:30","ext":"{\"msg\":\"code:1234\"}","mobile":"ok2","state":"issue_verify_code","user_id":-1}]
[Thread-5][INFO ] 16:35:18 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:94)> shutdown the mq consumer...
[Thread-8][INFO ] 16:35:18 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 16:35:18 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:35:18 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:35:18 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:35:18 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:35:18 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 16:35:18 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:35:19 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:35:19 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:35:19 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:35:19 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:35:19 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:35:19 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 16:35:25 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:35:26 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$77732450] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:26 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:35:27 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:35:27 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:35:27 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
[main][INFO ] 16:35:27 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5b592153] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c4e79224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$77732450] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:27 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:35:28 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1776 ms
[main][WARN ] 16:35:28 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:35:28 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:35:28 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:35:28 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:35:28 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:35:28 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:35:28 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:35:28 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:35:28 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:89)> init_rocket_mq_consumer: localhost:9976@user_state_group
[main][WARN ] 16:35:29 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mqConsumerService': Invocation of init method failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,marekt_ext,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
[main][INFO ] 16:35:29 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[main][INFO ] 16:35:29 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[main][INFO ] 16:35:29 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[main][INFO ] 16:35:29 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[main][INFO ] 16:35:29 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[main][INFO ] 16:35:29 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[main][INFO ] 16:35:29 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 16:35:29 method:org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822)> Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mqConsumerService': Invocation of init method failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,marekt_ext,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)
	at com.sup.backend.BackendApplication.main(BackendApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,marekt_ext,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy76.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:62)
	at com.sun.proxy.$Proxy79.selectList(Unknown Source)
	at com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:50)
	at com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	... 23 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'marekt_ext' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy82.query(Unknown Source)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 38 more
[Thread-5][INFO ] 16:35:29 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:99)> shutdown the mq consumer...
[background-preinit][INFO ] 16:35:57 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:35:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d4d32ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:58 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:35:58 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:35:58 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:35:58 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[main][INFO ] 16:35:59 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71332fef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$dac1a0c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d4d32ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:35:59 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:35:59 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1736 ms
[main][WARN ] 16:36:00 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:36:00 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:36:00 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:36:00 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:36:00 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:36:00 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:36:00 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:36:00 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:36:00 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:88)> init_rocket_mq_consumer: localhost:9976@user_state_group
[main][INFO ] 16:36:00 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:83)> final_topic_info:{"user_business_state":["issue_verify_code"]}
[main][INFO ] 16:36:01 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: localhost:9976@user_state_group
[main][WARN ] 16:36:01 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 16:36:02 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 16:36:02 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 16:36:02 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 16:36:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:36:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 16:36:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:36:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 16:36:02 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 16:36:02 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 16:36:02 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 16:36:02 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 16:36:02 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 16:36:02 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 16:36:02 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 16:36:02 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@143fefaf
[main][INFO ] 16:36:03 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 16:36:03 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 16:36:03 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 16:36:03 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.232 seconds (JVM running for 6.685)
[http-nio-10081-exec-1][INFO ] 16:36:13 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 16:36:13 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 9 ms
[ConsumeMessageThread_1][INFO ] 16:36:14 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:132)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:36:14","ext":"{\"verify_code\":\"1234\"}","mobile":"test1","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:36:14 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:151)> send_sms_message_content: code: ${verify_code}
[ConsumeMessageThread_1][INFO ] 16:36:21 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:132)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:36:21","ext":"{\"verify_code\":\"1234\"}","mobile":"test2","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:36:21 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:151)> send_sms_message_content: code: ${verify_code}
[Thread-11][INFO ] 16:37:37 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:37:37 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:37:37 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:37:37 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:37:37 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-8][INFO ] 16:37:37 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 16:37:37 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:98)> shutdown the mq consumer...
[Thread-11][INFO ] 16:37:37 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:37:38 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:37:38 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:37:38 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:37:38 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:37:38 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:37:38 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 16:37:44 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 16:37:45 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3758891f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:45 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 16:37:46 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 16:37:46 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 16:37:46 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
[main][INFO ] 16:37:46 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=6b060f1d-14f4-356b-912f-bf5e961151fa
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1b3e8622] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$84ccf6f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:46 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3758891f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 16:37:47 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 16:37:47 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1740 ms
[main][WARN ] 16:37:47 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 16:37:47 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 16:37:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 16:37:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 16:37:48 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 16:37:48 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 16:37:48 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 16:37:48 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 16:37:48 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:88)> init_rocket_mq_consumer: localhost:9976@user_state_group
[main][INFO ] 16:37:48 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:83)> final_topic_info:{"user_business_state":["issue_verify_code"]}
[main][INFO ] 16:37:49 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: localhost:9976@user_state_group
[main][WARN ] 16:37:49 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 16:37:49 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 16:37:49 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 16:37:49 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 16:37:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:37:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 16:37:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 16:37:49 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 16:37:50 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 16:37:50 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 16:37:50 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 16:37:50 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 16:37:50 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 16:37:50 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 16:37:50 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 16:37:50 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2997ddfc
[main][INFO ] 16:37:50 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 16:37:50 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 16:37:50 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 16:37:50 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 6.335 seconds (JVM running for 6.82)
[http-nio-10081-exec-1][INFO ] 16:38:07 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 16:38:07 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 8 ms
[ConsumeMessageThread_1][INFO ] 16:38:08 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:132)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:38:07","ext":"{\"verify_code\":\"1234\"}","mobile":"ok1","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:38:08 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:151)> send_sms_message_content: code: 1234
[ConsumeMessageThread_1][INFO ] 16:38:14 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:132)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:38:14","ext":"{\"verify_code\":\"1234\"}","mobile":"ok2","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:38:14 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:151)> send_sms_message_content: code: 1234
[ConsumeMessageThread_1][INFO ] 16:38:19 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:132)> [recv_msg]:[user_business_state|issue_verify_code|{"create_time":"2019-09-18 16:38:18","ext":"{\"verify_code\":\"1234\"}","mobile":"ok3","state":"issue_verify_code","user_id":-1}]
[ConsumeMessageThread_1][INFO ] 16:38:19 method:com.sup.backend.service.MqConsumerService.HandleMessage(MqConsumerService.java:151)> send_sms_message_content: code: 1234
[Thread-11][INFO ] 16:45:08 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-5][INFO ] 16:45:08 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:98)> shutdown the mq consumer...
[Thread-8][INFO ] 16:45:08 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-11][INFO ] 16:45:08 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 16:45:08 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 16:45:08 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 16:45:08 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 16:45:08 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 16:45:09 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 16:45:09 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 16:45:09 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 16:45:09 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 16:45:09 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 16:45:09 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 17:41:55 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:41:56 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b5cbc61f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:41:56 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][WARN ] 17:41:57 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'service-core.FeignClientSpecification' defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'service-core.FeignClientSpecification': There is already [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.
[main][INFO ] 17:41:57 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 17:41:57 method:org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)> 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'service-core.FeignClientSpecification', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[background-preinit][INFO ] 17:42:12 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:42:13 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$51c9dc38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:42:13 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][WARN ] 17:42:13 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'service-core.FeignClientSpecification' defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'service-core.FeignClientSpecification': There is already [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.
[main][INFO ] 17:42:13 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 17:42:13 method:org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)> 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'service-core.FeignClientSpecification', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[background-preinit][INFO ] 17:42:48 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:42:49 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b7454cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:42:50 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][WARN ] 17:42:50 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'service-core.FeignClientSpecification' defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'service-core.FeignClientSpecification': There is already [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.
[main][INFO ] 17:42:50 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 17:42:50 method:org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)> 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'service-core.FeignClientSpecification', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[background-preinit][INFO ] 17:44:00 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:44:00 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f974036] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:44:01 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][WARN ] 17:44:01 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'service-core.FeignClientSpecification' defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'service-core.FeignClientSpecification': There is already [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.
[main][INFO ] 17:44:01 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 17:44:01 method:org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)> 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'service-core.FeignClientSpecification', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[background-preinit][INFO ] 17:44:44 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:44:45 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2dd61759] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:44:45 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][WARN ] 17:44:45 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'service-core.FeignClientSpecification' defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'service-core.FeignClientSpecification': There is already [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.
[main][INFO ] 17:44:45 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 17:44:45 method:org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)> 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'service-core.FeignClientSpecification', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[background-preinit][INFO ] 17:57:16 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:57:17 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$37248d2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:17 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][WARN ] 17:57:17 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'service-core.FeignClientSpecification' defined in null: Cannot register bean definition [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] for bean 'service-core.FeignClientSpecification': There is already [Generic bean: class [org.springframework.cloud.openfeign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] bound.
[main][INFO ] 17:57:17 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 17:57:17 method:org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40)> 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'service-core.FeignClientSpecification', defined in null, could not be registered. A bean with that name has already been defined in null and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[background-preinit][INFO ] 17:57:55 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 17:57:55 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$231b90bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:56 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 17:57:56 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 17:57:56 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 17:57:56 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
[main][INFO ] 17:57:57 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=f1dc47bd-68e0-3b47-ba06-be8936e7df1b
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.ApplyService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.LoanService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7018dc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$708ffe91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$231b90bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 17:57:57 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 17:57:57 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1686 ms
[main][WARN ] 17:57:58 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 17:57:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 17:57:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 17:57:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 17:57:58 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 17:57:58 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 17:57:58 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 17:57:58 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 17:57:58 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:88)> init_rocket_mq_consumer: 47.111.160.160:9976@user_state_group
[main][INFO ] 17:57:58 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:83)> final_topic_info:{"user_business_state":["issue_verify_code"]}
[main][INFO ] 17:58:02 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: 47.111.160.160:9976@user_state_group
[main][WARN ] 17:58:02 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 17:58:02 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 17:58:02 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 17:58:02 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 17:58:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 17:58:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 17:58:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 17:58:02 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 17:58:03 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 17:58:03 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 17:58:03 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 17:58:03 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 17:58:03 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 17:58:03 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 17:58:03 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 17:58:03 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5b8853
[main][INFO ] 17:58:03 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 17:58:03 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 17:58:03 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 17:58:03 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 8.733 seconds (JVM running for 9.256)
[http-nio-10081-exec-1][INFO ] 17:58:22 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524)> Initializing Servlet 'dispatcherServlet'
[http-nio-10081-exec-1][INFO ] 17:58:22 method:org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546)> Completed initialization in 8 ms
[Thread-8][INFO ] 18:15:54 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 18:15:54 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:98)> shutdown the mq consumer...
[Thread-11][INFO ] 18:15:54 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 18:15:54 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 18:15:54 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 18:15:54 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 18:15:54 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 18:15:54 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 18:15:56 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 18:15:56 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 18:15:56 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 18:15:56 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 18:15:56 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 18:15:56 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[background-preinit][INFO ] 18:16:00 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 18:16:01 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79e639d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:01 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 18:16:02 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 18:16:02 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 18:16:02 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[main][INFO ] 18:16:02 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=bb938fde-8e08-3e75-9d88-322fc4732cd7
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.ApplyService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.LoanService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5dcc36da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c75aa7ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:02 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79e639d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 18:16:03 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 18:16:03 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 2016 ms
[main][WARN ] 18:16:03 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 18:16:03 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 18:16:04 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 18:16:04 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 18:16:04 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 18:16:04 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 18:16:04 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 18:16:04 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 18:16:04 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:88)> init_rocket_mq_consumer: 47.111.160.160:9976@user_state_group
[main][INFO ] 18:16:04 method:com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:83)> final_topic_info:{"user_business_state":["issue_verify_code"]}
[main][INFO ] 18:16:07 method:com.sup.backend.service.MqProducerService.init(MqProducerService.java:41)> init_rocket_mq_producer: 47.111.160.160:9976@user_state_group
[main][WARN ] 18:16:08 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 18:16:08 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 18:16:08 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 18:16:08 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 18:16:08 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 18:16:08 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 18:16:08 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 18:16:08 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 18:16:09 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 18:16:09 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 18:16:09 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 18:16:09 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 18:16:09 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 18:16:09 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 18:16:09 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 18:16:09 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3a0b6a
[main][INFO ] 18:16:09 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 18:16:09 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 18:16:09 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 18:16:09 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 9.576 seconds (JVM running for 10.102)
[Thread-8][INFO ] 18:20:05 method:com.sup.backend.service.MqProducerService.lambda$init$0(MqProducerService.java:47)> shutdown the mq producer ...
[Thread-5][INFO ] 18:20:05 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:98)> shutdown the mq consumer...
[Thread-11][INFO ] 18:20:05 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 18:20:05 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-11][INFO ] 18:20:05 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-11][INFO ] 18:20:05 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-11][INFO ] 18:20:05 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-11][INFO ] 18:20:05 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-11][INFO ] 18:20:05 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-11][INFO ] 18:20:05 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-11][INFO ] 18:20:05 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-11][INFO ] 18:20:05 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-11][INFO ] 18:20:05 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-11][INFO ] 18:20:05 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
