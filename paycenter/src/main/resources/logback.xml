<?xml version="1.0" encoding="UTF-8"?>

<configuration debug="false" scan="true" scanPeriod="5 minutes">
    <contextName>Alioth</contextName>

    <!-- 日志文件存储路径 -->
    <property name="APPLICATION_NAME" value="uniloan_paycenter"/>

    <!--<springProfile name="!prod">-->
    <!--<property name="LOG_HOME" value="logs/"/>-->
    <!--</springProfile>-->
    <!--<springProfile name="prod">-->
    <!--<property name="LOG_HOME" value="/opt/yrd_logs/${APPLICATION_NAME}"/>-->
    <!--</springProfile>-->

    <property name="LOG_HOME" value="logs/"/>

    <!-- 控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %class{200}:%line | %X{REQUEST_IP} | %X{REQUEST_REAL_NAME} | %X{REQUEST_USER_NAME} | %X{REQUEST_URI} | %msg%n
            </pattern>
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} [%-5p] %c (%F:%L) - %m%n"/>
        </layout>
    </appender>

    <!-- Info -->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/info/${APPLICATION_NAME}-info.log</file>
        <!-- 配置过滤 error的日志不会进入到info里 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>
        <!-- 每天生成日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/info/${APPLICATION_NAME}.%d{yyyy-MM-dd}-info.log.gz</fileNamePattern>
            <!-- 日志文件保留30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                %date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %class{200}:%line | %X{REQUEST_IP} | %X{REQUEST_REAL_NAME} | %X{REQUEST_USER_NAME} | %X{REQUEST_URI} | %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- Error -->
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/error/${APPLICATION_NAME}-error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/error/${APPLICATION_NAME}.%d{yyyy-MM-dd}-error.log.gz</fileNamePattern>
            <!-- 日志文件保留30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                %date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %class{200}:%line | %X{REQUEST_IP} | %X{REQUEST_REAL_NAME} | %X{REQUEST_USER_NAME} | %X{REQUEST_URI} | %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- 异步日志配置 -->
    <appender name="info_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>3000</discardingThreshold>
        <queueSize>10000</queueSize>
        <appender-ref ref="info"/>
    </appender>

    <appender name="error_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>3000</discardingThreshold>
        <queueSize>10000</queueSize>
        <appender-ref ref="error"/>
    </appender>

    <logger name="org.springframework" level="INFO"/>
    <logger name="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver" level="DEBUG"/>
    <logger name="ch.qos.logback" level="ERROR"/>
    <logger name="org.mybatis.spring.mapper.MapperScannerConfigurer" level="INFO"/>
    <logger name="org.mybatis.spring.SqlSessionFactoryBean" level="INFO"/>
    <logger name="org.apache.ibatis.logging.LogFactory" level="ERROR"/>
    <logger name="java.sql.ResultSet" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="error_async"/>
        <appender-ref ref="info_async"/>
        <appender-ref ref="stdout"/>
    </root>

</configuration>