[background-preinit][INFO ] 20:06:22 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 20:06:23 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$65c3503e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:23 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 20:06:24 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 20:06:24 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 20:06:24 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
[main][INFO ] 20:06:24 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=da5c4600-2c8c-3436-9737-e10c01c3bf2a
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49a94d41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b337be12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:24 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$65c3503e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:06:25 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 20:06:25 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1980 ms
[main][WARN ] 20:06:25 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 20:06:25 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 20:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 20:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 20:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][WARN ] 20:06:26 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mqConsumerService': Invocation of init method failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
[main][INFO ] 20:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[main][INFO ] 20:06:26 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[main][INFO ] 20:06:26 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[main][INFO ] 20:06:26 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 20:06:26 method:org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822)> Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mqConsumerService': Invocation of init method failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)
	at com.sup.backend.BackendApplication.main(BackendApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy76.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:62)
	at com.sun.proxy.$Proxy79.selectList(Unknown Source)
	at com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:44)
	at com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	... 23 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy82.query(Unknown Source)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 38 more
[Thread-5][INFO ] 20:06:26 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:90)> shutdown the mq consumer...
[background-preinit][INFO ] 20:13:19 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 20:13:20 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$54886fd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:20 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 20:13:21 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 20:13:21 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 20:13:21 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
[main][INFO ] 20:13:21 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=da5c4600-2c8c-3436-9737-e10c01c3bf2a
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$386e6cd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a1fcdda5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:21 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$54886fd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:13:22 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 20:13:22 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 2107 ms
[main][WARN ] 20:13:22 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 20:13:22 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 20:13:23 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 20:13:23 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 20:13:23 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 20:13:23 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 20:13:23 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 20:13:23 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][WARN ] 20:13:24 method:org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557)> Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mqConsumerService': Invocation of init method failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
[main][INFO ] 20:13:24 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[main][INFO ] 20:13:24 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[main][INFO ] 20:13:24 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[main][INFO ] 20:13:24 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[main][INFO ] 20:13:24 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[main][INFO ] 20:13:24 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[main][INFO ] 20:13:24 method:org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136)> 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[main][ERROR] 20:13:24 method:org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:822)> Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mqConsumerService': Invocation of init method failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)
	at com.sup.backend.BackendApplication.main(BackendApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
### The error may exist in com/sup/backend/mapper/TbMarketPlanMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,topic,tag,market_way,priority,status,create_time,update_time  FROM tb_market_plan
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy76.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:62)
	at com.sun.proxy.$Proxy79.selectList(Unknown Source)
	at com.sup.backend.service.MqConsumerService.DoSubscribe(MqConsumerService.java:44)
	at com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	... 23 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy82.query(Unknown Source)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 38 more
[Thread-5][INFO ] 20:13:24 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:90)> shutdown the mq consumer...
[background-preinit][INFO ] 20:14:03 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 20:14:04 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3569610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:05 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 20:14:05 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 20:14:05 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 20:14:05 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
[main][INFO ] 20:14:06 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=da5c4600-2c8c-3436-9737-e10c01c3bf2a
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$194f5e0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$82ddcedf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3569610b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:14:06 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 20:14:07 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 1908 ms
[main][WARN ] 20:14:07 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 20:14:07 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 20:14:07 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 20:14:07 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 20:14:07 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 20:14:07 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 20:14:07 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 20:14:07 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][WARN ] 20:14:10 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 20:14:10 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 20:14:10 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 20:14:10 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 20:14:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 20:14:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 20:14:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 20:14:10 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 20:14:11 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 20:14:11 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 20:14:11 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 20:14:11 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 20:14:11 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 20:14:11 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 20:14:11 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 20:14:11 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@149274cb
[main][INFO ] 20:14:12 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 20:14:12 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 20:14:12 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 20:14:12 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 8.353 seconds (JVM running for 8.818)
[background-preinit][INFO ] 20:15:04 method:org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)> HV000001: Hibernate Validator 6.0.17.Final
[main][INFO ] 20:15:05 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2dd61759] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:15:05 method:org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:647)> No active profile set, falling back to default profiles: default
[main][INFO ] 20:15:07 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244)> Multiple Spring Data modules found, entering strict repository configuration mode!
[main][INFO ] 20:15:07 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126)> Bootstrapping Spring Data repositories in DEFAULT mode.
[main][INFO ] 20:15:07 method:org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182)> Finished Spring Data repository scanning in 43ms. Found 0 repository interfaces.
[main][INFO ] 20:15:07 method:org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295)> BeanFactory id=da5c4600-2c8c-3436-9737-e10c01c3bf2a
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.sup.common.service.PayCenterService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$11bc145c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[Thread-10][INFO ] 20:15:07 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-10][INFO ] 20:15:07 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-10][INFO ] 20:15:07 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-10][INFO ] 20:15:07 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-10][INFO ] 20:15:07 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-5][INFO ] 20:15:07 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:90)> shutdown the mq consumer...
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[Thread-10][INFO ] 20:15:07 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7b4a852d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[Thread-10][INFO ] 20:15:07 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-10][INFO ] 20:15:07 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[main][INFO ] 20:15:07 method:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330)> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2dd61759] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[Thread-10][INFO ] 20:15:07 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-10][INFO ] 20:15:07 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-10][INFO ] 20:15:07 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-10][INFO ] 20:15:07 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
[main][INFO ] 20:15:08 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90)> Tomcat initialized with port(s): 10081 (http)
[main][INFO ] 20:15:08 method:org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284)> Root WebApplicationContext: initialization completed in 3079 ms
[main][WARN ] 20:15:09 method:com.zaxxer.hikari.HikariConfig.validateNumerics(HikariConfig.java:973)> test - idleTimeout is close to or more than maxLifetime, disabling it.
[main][INFO ] 20:15:09 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> test - Starting...
[main][INFO ] 20:15:10 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> test - Start completed.
[main][INFO ] 20:15:10 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)> buyt - Starting...
[main][INFO ] 20:15:10 method:com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:82)> buyt - Start completed.
[main][INFO ] 20:15:10 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [test] success
[main][INFO ] 20:15:10 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.addDataSource(DynamicRoutingDataSource.java:144)> dynamic-datasource - load a datasource named [buyt] success
[main][INFO ] 20:15:10 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:216)> dynamic-datasource initial loaded [2] datasource,primary datasource named [test]
[main][INFO ] 20:15:10 method:com.sup.backend.service.MqConsumerService.init(MqConsumerService.java:82)> do mqclient post_init...
[main][WARN ] 20:15:14 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.backend.bean.AppSubmitOrder.
[main][WARN ] 20:15:15 method:com.baomidou.mybatisplus.core.metadata.TableInfoHelper.initTableFields(TableInfoHelper.java:285)> Warn: Could not find @TableId in Class: com.sup.common.bean.TbRepayMaterialInfoBean.
[main][INFO ] 20:15:15 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171)> Initializing ExecutorService 'MvcTaskExecutor'
[main][WARN ] 20:15:15 method:org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120)> No spring.application.name found, defaulting to 'application'
[main][WARN ] 20:15:15 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 20:15:15 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][WARN ] 20:15:15 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)> No URLs will be polled as dynamic configuration sources.
[main][INFO ] 20:15:15 method:com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[main][INFO ] 20:15:17 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208)> Using default implementation for ThreadExecutor
[main][INFO ] 20:15:17 method:org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61)> Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[main][INFO ] 20:15:17 method:org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229)> Quartz Scheduler v.2.3.1 created.
[main][INFO ] 20:15:17 method:org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155)> RAMJobStore initialized.
[main][INFO ] 20:15:17 method:org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294)> Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[main][INFO ] 20:15:17 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362)> Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[main][INFO ] 20:15:17 method:org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366)> Quartz scheduler version: 2.3.1
[main][INFO ] 20:15:17 method:org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2293)> JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@27a6fef2
[main][INFO ] 20:15:17 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726)> Starting Quartz Scheduler now
[main][INFO ] 20:15:17 method:org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547)> Scheduler quartzScheduler_$_NON_CLUSTERED started.
[main][INFO ] 20:15:18 method:org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202)> Tomcat started on port(s): 10081 (http) with context path ''
[main][INFO ] 20:15:18 method:org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)> Started BackendApplication in 14.002 seconds (JVM running for 14.604)
[Thread-10][INFO ] 20:15:53 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-10][INFO ] 20:15:53 method:org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844)> Shutting down Quartz Scheduler
[Thread-10][INFO ] 20:15:53 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666)> Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[Thread-10][INFO ] 20:15:53 method:org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585)> Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[Thread-10][INFO ] 20:15:53 method:org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740)> Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[Thread-5][INFO ] 20:15:53 method:com.sup.backend.service.MqConsumerService.lambda$init$0(MqConsumerService.java:91)> shutdown the mq consumer...
[Thread-10][INFO ] 20:15:53 method:org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208)> Shutting down ExecutorService 'MvcTaskExecutor'
[Thread-10][INFO ] 20:15:53 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:184)> dynamic-datasource start closing ....
[Thread-10][INFO ] 20:15:53 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> test - Shutdown initiated...
[Thread-10][INFO ] 20:15:53 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> test - Shutdown completed.
[Thread-10][INFO ] 20:15:53 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)> buyt - Shutdown initiated...
[Thread-10][INFO ] 20:15:53 method:com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352)> buyt - Shutdown completed.
[Thread-10][INFO ] 20:15:53 method:com.baomidou.dynamic.datasource.DynamicRoutingDataSource.destroy(DynamicRoutingDataSource.java:200)> dynamic-datasource all closed success,bye
